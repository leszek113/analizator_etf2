# =============================================================================
# ETF Analyzer - Przykładowa konfiguracja środowiska
# =============================================================================
# 
# Skopiuj ten plik do .env i uzupełnij swoimi kluczami API
# cp env.example .env
# 
# Wszystkie klucze API są wymagane dla pełnej funkcjonalności systemu
# =============================================================================

# =============================================================================
# API KEYS - WYMAGANE
# =============================================================================

# Financial Modeling Prep (FMP) - GŁÓWNE ŹRÓDŁO
# Limit: 500 requestów/dzień
# Rejestracja: https://financialmodelingprep.com/
FMP_API_KEY=your_fmp_api_key_here

# EOD Historical Data (EODHD) - BACKUP
# Limit: 100 requestów/dzień  
# Rejestracja: https://eodhistoricaldata.com/
EODHD_API_KEY=your_eodhd_api_key_here

# Tiingo - FALLBACK
# Limit: 50 requestów/dzień
# Rejestracja: https://api.tiingo.com/
TIINGO_API_KEY=your_tiingo_api_key_here

# =============================================================================
# KONFIGURACJA APLIKACJI
# =============================================================================

# Klucz szyfrowania sesji (zmień w produkcji!)
SECRET_KEY=change-this-secret-key-in-production

# Konfiguracja bazy danych
# SQLite (domyślnie) - plik zostanie utworzony automatycznie
DATABASE_URL=sqlite:///etf_analyzer.db

# PostgreSQL (opcjonalnie - dla produkcji)
# DATABASE_URL=postgresql://username:password@localhost/etf_analyzer

# =============================================================================
# KONFIGURACJA SERWERA
# =============================================================================

# Port na którym będzie działać aplikacja
PORT=5005

# Host (0.0.0.0 = dostęp z zewnątrz, 127.0.0.1 = tylko lokalnie)
HOST=127.0.0.1

# =============================================================================
# KONFIGURACJA LOGOWANIA
# =============================================================================

# Poziom logowania (DEBUG, INFO, WARNING, ERROR, CRITICAL)
LOG_LEVEL=INFO

# Maksymalny rozmiar pliku logów (w bajtach)
LOG_MAX_SIZE=10485760  # 10 MB

# Liczba plików logów do zachowania
LOG_BACKUP_COUNT=5

# =============================================================================
# KONFIGURACJA CACHE
# =============================================================================

# Czas życia cache w sekundach (domyślnie 1 godzina)
CACHE_TTL_SECONDS=3600

# Maksymalna liczba elementów w cache
CACHE_MAX_ITEMS=1000

# =============================================================================
# KONFIGURACJA SCHEDULERA
# =============================================================================

# Włączenie API schedulera (True/False)
SCHEDULER_API_ENABLED=True

# Strefa czasowa schedulera (UTC/CET)
SCHEDULER_TIMEZONE=UTC

# =============================================================================
# KONFIGURACJA RETRY
# =============================================================================

# Maksymalna liczba prób ponowienia requestów API
MAX_RETRIES=3

# Podstawowe opóźnienie między próbami (w sekundach)
RETRY_DELAY_BASE=0.5

# =============================================================================
# KONFIGURACJA BEZPIECZEŃSTWA
# =============================================================================

# Maksymalna długość ticker (domyślnie 20 znaków)
MAX_TICKER_LENGTH=20

# Dozwolone znaki w ticker (regex pattern)
TICKER_PATTERN=^[A-Z0-9]+$

# =============================================================================
# KONFIGURACJA PRODUKCJI
# =============================================================================

# Środowisko (development/production)
FLASK_ENV=development

# Debug mode (True/False) - wyłącz w produkcji!
FLASK_DEBUG=True

# =============================================================================
# INSTRUKCJE
# =============================================================================
#
# 1. Skopiuj ten plik: cp env.example .env
# 2. Edytuj .env i dodaj swoje klucze API
# 3. Uruchom aplikację: python3 app.py
# 4. Sprawdź status: curl http://localhost:5005/api/system/status
#
# =============================================================================
